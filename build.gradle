buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.7.9"
        classpath "org.openapitools:openapi-generator-gradle-plugin:6.4.0"
    }
}

group = 'my.wiki'
version = '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: 'io.spring.dependency-management'

    group rootProject.group
    version rootProject.version

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-web')

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    compileJava {
        sourceCompatibility = 11
        targetCompatibility = 11
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        sourceCompatibility = 11
        targetCompatibility = 11
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }
}

configure(project(":crawler")) {
    dependencies {
        implementation('org.springframework.kafka:spring-kafka')
        implementation(project(":common"))
    }
}

configure(project(":graph")) {
    dependencies {
        implementation('org.springframework.kafka:spring-kafka')
        implementation 'org.postgresql:postgresql:42.5.4'
        implementation 'org.flywaydb:flyway-core:9.15.1'
        implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
        implementation(project(":graph-api"))
        implementation(project(":common"))
    }
}

configure(project(":unifier")) {
    //TODO убрать после создания main-класса
    bootJar {
        enabled = false
    }
}

configure(project(":graph-api")) {
    apply plugin: "java"
    apply plugin: "org.openapi.generator"

    jar {
        archiveClassifier = ""
    }
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.dependsOn tasks.openApiGenerate

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-validation"

        implementation 'io.springfox:springfox-oas:3.0.0'
        implementation 'io.springfox:springfox-swagger-ui:3.0.0'

        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
        implementation 'org.openapitools:jackson-databind-nullable:0.2.2'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    openApiGenerate {
        generatorName = "spring"
        inputSpec = "$projectDir/api.yaml".toString()
        outputDir = "$buildDir/generated".toString()
        apiPackage = "my.wiki.api"
        invokerPackage = "my.wiki.api"
        modelPackage = "my.wiki.api.model"
        library = "spring-boot"
        version = "${rootProject.version}"
        group = "my.wiki.api"
        configOptions = [
                dateLibrary                : "java8",
                skipDefaultInterface       : "true",
                interfaceOnly              : "true",
                useTags                    : "true",
                oas3                       : "true",
                legacyDiscriminatorBehavior: "false"
        ]
    }
    sourceSets {
        main {
            java {
                srcDir(files("${openApiGenerate.outputDir.get()}/src/main/java"))
            }
        }
    }

    tasks {
        bootJar.enabled(false)
        bootRun.enabled(false)
    }
}

configure(project(":common")) {
    dependencies {
        implementation('org.springframework.kafka:spring-kafka')
    }
    bootJar {
        enabled = false
    }
}